# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on:
  release:
    types:
      - released

permissions:
  contents: read

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
      - name: GutHub checkout
        uses: actions/checkout@v3

      - name: Get the tag version
        id: get_tag
        run: |
          tag=${GITHUB_REF/refs\/tags\//}
          # remove the leading 'v' from the tag
          tag=${tag:1}
          echo "tag=${tag}" >> $GITHUB_OUTPUT

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10'

      - name: Run propagate_version.py
        working-directory: ./electron
        run: |
          python3 ./scripts/propagate_version.py --version ${{ steps.get_tag.outputs.tag }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          cd backend && poetry install

      - name: Run tests
        run: |
          cd backend && poetry run pytest .

      - name: Build package
        run: |
          cd backend && poetry build

      - name: Publish package
        run: |
          cd backend && poetry publish --username __token__ --password ${{ secrets.PYPI_API_TOKEN }}
